@page "/dialogs"

<h2>Dialog Panel</h2>

Click on this button to open a dialog panel.<br/>
<FluentButton OnClick="@(() => IsOpen = true)" Appearance="Appearance.Accent">Open panel</FluentButton>

<FluentPanel @bind-IsOpen="IsOpen" OnIsOpenChanged="@IsOpen_Changed">
    <Header>My Header</Header>
    <Body>My Content</Body>
    <Footer>
        <FluentStackPanel Orientation="Orientation.Horizontal">
            <FluentButton Width="100px" 
                          OnClick="@(() => IsOpen = false)"
                          Appearance="Appearance.Accent">Save</FluentButton>
            <FluentButton Width="100px" 
                          OnClick="@(() => IsOpen = false)"
                          Appearance="Appearance.Neutral">Cancel</FluentButton>
        </FluentStackPanel>
    </Footer>
</FluentPanel>

@code
{
    bool IsOpen = false;

    void IsOpen_Changed(bool isOpen)
    {
        Console.AddTrace(IsOpen ? "Panel is open" : "Panel is closed");
    }
}

<CodeSnippet>@(@"
<FluentPanel @bind-IsOpen=""IsOpen"" OnIsOpenChanged=""@IsOpen_Changed"">
    <Header>My Header</Header>
    <Body>My Content</Body>
    <Footer>
        <FluentStackPanel Orientation=""Orientation.Horizontal"">
            <FluentButton Width=""100px"" 
                          OnClick=""@(() => panel.Close())""
                          Appearance=""Appearance.Accent"">Save</FluentButton>
            <FluentButton Width=""100px"" 
                          OnClick=""@(() => panel.Close())""
                          Appearance=""Appearance.Neutral"">Cancel</FluentButton>
        </FluentStackPanel>
    </Footer>
</FluentPanel>

@code
{
    public bool IsOpen = false;

    void IsOpen_Changed(bool isOpen)
    {
        Console.AddTrace(IsOpen ? ""Panel is open"" : ""Panel is closed"");
    }
}")
</CodeSnippet>

<h2>Properties</h2>
...

<h2>Console</h2>
<ConsoleLog @ref="Console" />

@code
{
    ConsoleLog Console = default!;
}